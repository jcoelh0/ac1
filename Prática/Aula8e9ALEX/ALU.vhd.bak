library ieee;
use ieee.std_logic_1164.all;

entity ALU is
	port(	DataIn1 	: in std_logic_vector(31 downto 0);
			DataIn2 	: in std_logic_vector(31 downto 0);
			Sel 		: in std_logic_vector(2 downto 0);
			Zero		: out std_logic;
			Result 	: out std_loigc_vector(31 downto 0));
end ALU;

architecture Behavioral of ALU is
	signal s_d : unsigned(31 downto 0);
	signal s_Result : std_logic_vector(31 downto 0);
begin
	process(Sel)
	begin
		s_d <= not(unsigned(DataIn2)) + 1 when oper = "110" else unsigned(DataIn2); -- complemento para 2 (se subtração)
		zero <= '1' when s_Resul = X"00000000" else '0';
		case Sel is
			when "000" =>
				s_Result <= DataIn1 and DataIn2; 	--AND
			when "001" =>
				Result <= DataIn1 or DataIn2; 	--OR
			when "010" =>
				Result <= DataIn1 + DataIn2;		--ADD
			when "011" =>
				Result <= DataIn1 xor DataIn2;  	--xOR
			when "100" =>
				Result <= DataIn1 nor DataIn2;	--NOR
			when "110" =>
				Result <= DataIn1 - DataIn2;		--SUB
			when "111" =>
				if